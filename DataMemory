`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 11/14/2023 12:05:45 PM
// Design Name: 
// Module Name: data_mem
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module data_mem(
 input logic[31:0]A,
 input logic[31:0]WD,
 input logic clk,
 input logic WE,
 input logic[3:0] WM,
 input logic[3:0] RM,
 output logic[31:0]RD
 
);
      
 //Create Memory
    logic[31:0] datamem[1023:0];
    

always_comb begin
 if(WE) begin
    case(WM)
    4'b0001: datamem[A][7:0] = WD[7:0]; 
    4'b0010: datamem[A][15:0] = WD[15:0];
    4'b0011: datamem[A] = WD;
    default: datamem[A] = 32'b0;
    endcase
    end
    end
 


// Read 
   assign RD = 
                (RM==4'b0000) ? { 24'b0,datamem[A][7:0]} :
                (RM==4'b0001) ? {16'b0, datamem[A][15:0]} : 
                (RM==4'b0010) ? {datamem[A]} :  32'b0 ;
                 

                    
initial begin
  $readmemh("dmem.mem",datamem);
end
 
endmodule
